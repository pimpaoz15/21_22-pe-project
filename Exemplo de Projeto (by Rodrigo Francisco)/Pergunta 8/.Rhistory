dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, fill = "médias"), binwidth = 1) +
stat_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
#scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 1) +
stat_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
help("stat_function")
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
#geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 1) +
stat_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
#scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
#geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 1) +
stat_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 1) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n(24)
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 2) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 10) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 0.5) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = 0.1) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- var(d)/n
dados <- data.frame(d)
binw <- 0.1
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = binw) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v*binw*560)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
help(sd)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- sd(d)/n
dados <- data.frame(d)
binw <- 0.1
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = binw) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v*binw*560)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- sd(d)/n
dados <- data.frame(d)
binw <- 0.1
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = binw) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v*binw)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- sd(d)/n
dados <- data.frame(d)
binw <- 0.1
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = binw) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v*binw*100)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- sd(d)/n
dados <- data.frame(d)
binw <- 0.1
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = binw) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v*binw*50)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
grafico_com_n <- function(n) {
set.seed(872)
d <- numeric(560)
for (x in 1:560) d[x] <- mean(runif(n, 9, 13))
m <- mean(d)
print(m)
v <- sd(d)/n
dados <- data.frame(d)
binw <- 0.1
g <- ggplot(dados) +
geom_histogram(aes(d, stat(density), fill = "médias"), binwidth = binw) +
geom_function(aes(color = "normal"), fun = dnorm, n = 100,
args = list(mean = m, sd = v*binw*40)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("normal" = "firebrick"), labels = NULL) +
scale_fill_manual(values = c("médias" = "deepskyblue"), labels = NULL) +
labs(fill = "Médias", color = "Normal")
g
# ggsave(paste("Plot", n, ".png"), plot, width = 1920, height = 1080, units = "px")
}
grafico_com_n(3)
library(ggplot2)
grafico_com_n <- function(n, seed, samples, a, b) {
# Geração dos dados
set.seed(seed)
d <- numeric(samples)
for (x in 1:samples) d[x] <- mean(runif(n, a, b))
# Criação de uma distribuição normal com a mesma média e variância
X <- seq(from = a, to = b, length.out = samples)
f.X <- dnorm(X, mean = (a+b)/2, sd = sqrt(((b-a)^2)/(12*n)))
#Criação do data frame
dados <- data.frame(d, X, f.X)
# Desenho do gráfico com os dados
g <- ggplot(dados, aes(d)) +
geom_histogram(aes(y = after_stat(count / sum(count)), fill = "Médias"),
binwidth = 0.2, color="white") +
geom_line(aes(x = X, y = f.X/5.5, color = "Normal")) +
scale_y_continuous(labels = scales::percent) + xlim(a, b) +
scale_color_manual(values = c("Normal" = "firebrick2"), name = NULL) +
scale_fill_manual(values = c("Médias" = "deepskyblue"), name = NULL) +
labs(fill = "Médias", color = "Normal", subtitle = sprintf("n = %s", n),
title = "Distribuição de médias de distribuições uniformes",
x = "Valores da distribuição da média", y = "Frequência relativa")
return(g)
}
# Ciclo de geração dos gráficos para cada n
for(n in c(3, 24, 75)) {
plot <- grafico_com_n(n, seed=872, samples=560, a=9, b=13)
# Guarda o plot como imagem
ggsave(sprintf("Plot%s.png", n), plot, width = 1920, height = 1080, units = "px")
}
# Ciclo de geração dos gráficos para cada n
for(n in c(3, 24, 75)) {
plot <- grafico_com_n(n, seed=872, samples=560, a=9, b=13)
# Guarda o plot como imagem
ggsave(sprintf("Plot%s.png", n), plot, width = 1920, height = 1080, units = "px")
}
setwd("~/Trabalhos/Educação/21.22 IST/2º Semestre/PE/Projeto/Pergunta 6")
# Ciclo de geração dos gráficos para cada n
for(n in c(3, 24, 75)) {
plot <- grafico_com_n(n, seed=872, samples=560, a=9, b=13)
# Guarda o plot como imagem
ggsave(sprintf("Plot%s.png", n), plot, width = 1920, height = 1080, units = "px")
}
setwd("~/Trabalhos/Educação/21.22 IST/2º Semestre/PE/Projeto/Pergunta 7")
library(ggplot2)
library(readxl)
library(dplyr)
cal <- function(c2, m1, m2, tm, t1, t2) {
return(c2 * (m2 + 24) * ((tm-t2)/(t1-tm)) / m1)
}
excel <- read_excel("./Fisica 2 com Lab (Respostas ate 20_5).xlsx",
col_types = "numeric", range="D2:AO89")
col_mc <- excel[1]
col_m2 <- excel[3]
col_m1 <- excel[5]
col_t1 <- excel[7]
col_t2 <- excel[9]
col_tm <- excel[11]
setwd("~/Trabalhos/Educação/21.22 IST/2º Semestre/F2")
library(ggplot2)
library(readxl)
library(dplyr)
cal <- function(c2, m1, m2, tm, t1, t2) {
return(c2 * (m2 + 24) * ((tm-t2)/(t1-tm)) / m1)
}
excel <- read_excel("./Fisica 2 com Lab (Respostas ate 20_5).xlsx",
col_types = "numeric", range="D2:AO89")
col_mc <- excel[1]
col_m2 <- excel[3]
col_m1 <- excel[5]
col_t1 <- excel[7]
col_t2 <- excel[9]
col_tm <- excel[11]
col_c1 <- numeric(87)
for(i in 1:87) {
mc <- sum(col_mc[i,])
m2 <- sum(col_m2[i,]) - mc
m1 <- sum(col_m1[i,]) - mc - m2
t1 <- sum(col_t1[i,])
t2 <- sum(col_t2[i,])
tm <- sum(col_tm[i,])
c1 <- cal(4.186, m1, m2, tm ,t1, t2)
if (t1 == tm || m1 == 0) {
col_c1[i] <- 0
} else {
col_c1[i] <- c1
}
}
dados <- data.frame(pos=1:87, col_c1)
plot <- ggplot(dados) +
geom_point(aes(x= pos, y=col_c1)) +
labs(x = sprintf("Observações"), y = "Calor específico [kJ/(kgºC)]",
title = "Dados do calor específico",
subtitle = "Valores experimentais obtidos por colegas de curso",
caption = sprintf("média = %f, variância = %f", mean(col_c1), var(col_c1)))
ggsave("Plot.png", plot, width = 1920, height = 1080, units = "px")
setwd("~/Trabalhos/Educação/21.22 IST/2º Semestre/PE/Projeto/Pergunta 7")
pnorm(1.11)
seed <- 1429
samples <- 8225
seed <- 1429
samples <- 8225
size <- 70
n <- 14
p <- 0.32
set.seed(seed)
medias <- numeric(samples)
for(i in 1:samples) medias[i] <- mean(rbinom(n, size, p))
E_X_exp <- mean(medias)
E_X_teo <- n*p
diff <- abs(E_X_exp - E_X_teo)
medias
library(ggplot2)
dados <- data.frame(1:samples, medias)
ggplot(dados) +
geom_histogram(aes(medias))
n <- 0.32
p <- 14
for(i in 1:samples) medias[i] <- mean(rbinom(n, size, p))
E_X_exp <- mean(medias)
E_X_teo <- n*p
diff <- abs(E_X_exp - E_X_teo)
dados <- data.frame(i=1:samples, medias)
ggplot(dados) +
geom_histogram(aes(medias))
help(rbinom)
seed <- 1429
samples <- 8225
size <- 70
n <- 0.32
p <- 14
set.seed(seed)
medias <- numeric(samples)
for(i in 1:samples) medias[i] <- mean(rbinom(n, size, p))
E_X_exp <- mean(medias)
E_X_teo <- n*p
diff <- abs(E_X_exp - E_X_teo)
dados <- data.frame(i=1:samples, medias)
ggplot(dados) +
geom_histogram(aes(medias))
n <- 14
p <- 0.32
set.seed(seed)
medias <- numeric(samples)
for(i in 1:samples) medias[i] <- mean(rbinom(n, size, p))
E_X_exp <- mean(medias)
E_X_teo <- n*p
diff <- abs(E_X_exp - E_X_teo)
dados <- data.frame(i=1:samples, medias)
ggplot(dados) +
geom_histogram(aes(medias))
for(i in 1:samples) medias[i] <- mean(rbinom(size, n, p))
E_X_exp <- mean(medias)
E_X_teo <- n*p
diff <- abs(E_X_exp - E_X_teo)
dados <- data.frame(i=1:samples, medias)
ggplot(dados) +
geom_histogram(aes(medias))
diff <- function(seed, samples, size, n, p) {
set.seed(seed)
medias <- numeric(samples)
for(i in 1:samples) medias[i] <- mean(rbinom(size, n, p))
E_X_exp <- mean(medias)
E_X_teo <- n*p
return(abs(E_X_exp - E_X_teo))
}
diff(1429, 8225, 70, 14, 0.32)
setwd("~/Trabalhos/Educação/21.22 IST/2º Semestre/PE/Projeto/Pergunta 8")
help(recreate)
??recreate
help(reproduce)
??reproduce
help("replications")
library(dplyr)
diff <- function(lambda, seed, n, x) {
set.seed(seed)
rand <- data.frame(rexp(n, lambda))
rand2 <- filter(rand, rand < x)
estim <- length(rand2[,1])/length(rand[,1])
teo <- 1 - lambda*exp(-lambda*x)
diff <- abs(teo - estim)
}
diff <- function(lambda, seed, n, x) {
set.seed(seed)
rand <- data.frame(rexp(n, lambda))
rand2 <- filter(rand, rand < x)
estim <- length(rand2[,1])/length(rand[,1])
teo <- 1 - lambda*exp(-lambda*x)
return(abs(teo - estim))
}
diff(0.28, 1387, 633, 5)
source("~/Trabalhos/Educação/21.22 IST/2º Semestre/PE/Projeto/Pergunta 5/p5.R")
help("replicate")
help("replicate")
source("~/Trabalhos/Educação/21.22 IST/2º Semestre/PE/Projeto/Pergunta 5/p5.R")
diff <- function(seed, samples, size, n, p) {
set.seed(seed)
medias <- replicate(samples, mean(rbinom(size, n, p)))
E_X_exp <- mean(medias)
E_X_teo <- n*p
return(abs(E_X_exp - E_X_teo))
}
diff(1429, 8225, 70, 14, 0.32)
diff(1429, 8225, 70, 14, 0.32)
diff <- function(seed, samples, size, n, p) {
set.seed(seed)
return(abs(mean(replicate(samples, mean(rbinom(size, n, p)))) - n*p))
}
diff(1429, 8225, 70, 14, 0.32)
